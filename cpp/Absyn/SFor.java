package cpp.Absyn; // Java Package generated by the BNF Converter.

public class SFor extends Stm {
  public final Type type_;
  public final ListVar listvar_;
  public final Exp exp_1, exp_2;
  public final Stm stm_;
  public SFor(Type p1, ListVar p2, Exp p3, Exp p4, Stm p5) { type_ = p1; listvar_ = p2; exp_1 = p3; exp_2 = p4; stm_ = p5; }

  public <R,A> R accept(cpp.Absyn.Stm.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof cpp.Absyn.SFor) {
      cpp.Absyn.SFor x = (cpp.Absyn.SFor)o;
      return this.type_.equals(x.type_) && this.listvar_.equals(x.listvar_) && this.exp_1.equals(x.exp_1) && this.exp_2.equals(x.exp_2) && this.stm_.equals(x.stm_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(37*(37*(this.type_.hashCode())+this.listvar_.hashCode())+this.exp_1.hashCode())+this.exp_2.hashCode())+this.stm_.hashCode();
  }


}
